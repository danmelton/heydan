#!/usr/bin/env ruby
require 'rubygems'
require 'thor'
require File.join(Dir.pwd, 'lib', 'hey_dan.rb')
 
class HeyDanCLI < Thor
  class_option 'type'

  desc "sync", "Runs download, setup, update_files and import"
  def sync(*names)
    puts "Syncing #{names.join(', ')}"
    download()
    setup()
    update_files()
    import()
  end

  desc "server", "starts up the webserver for heydan"
  def server()
    puts "Serving up some HeyDan Realness"
    HeyDan::Server.run!
  end  

  desc "download NAMES", "Downloads all datasets from the CDN"
  def download(*names)
    puts "Downloading  #{names.join(', ')} files"
    HeyDan::CDN.new.download
  end  

  desc "setup", "Setups all the jurisdictions from the identifiers folder"
  def setup()
    puts "Setting up identifiers"
    HeyDan::Identifier.process({type: options[:type]})
  end 

  desc "update_files", "Processes download folder"
  def update_files(*names)
    puts "Processing datasets folder"
    HeyDan::Script.update_files({names: names, type: options[:type]})
  end 

  desc "parse NAMES", "Parses downloaded csv files into jurisdiction/*/*.json files"
  def parse(*names)
    if names.size > 0
      puts "Processing all #{names.join(', ')}"
      HeyDan::Parse.process({names: names, type: options[:type]})
    else
      puts "Processing all files"
      HeyDan::Parse.process_all({type: options[:type]})
    end
  end 

  desc "process NAMES", "Grab all datasets from original source process them and output into downloads folder."
  def process(*names)
    if names.size > 0
      puts "Processing all #{names.join(', ')}"
      HeyDan::Script.process({names: names, type: options[:type]})
    else
      puts "Processing all files"
      HeyDan::Script.process_all({type: options[:type]})
    end
    
  end  

  desc "import NAMES", "Bulk updates elasticsearch from the jurisdictions folder"
  def import(*names)
    HeyDan::ElasticSearch.new.import
  end  

  desc "upload NAMES", "uploads download folder to s3. If you have a settings.yml file with keys, it will upload all the files to an s3 bucket "
  def upload(*names)
    HeyDan::CDN.new.upload(names)
    puts "Uploading  #{names.join(', ')}"
  end  

  desc "new NAME", "generates new files to add a new dataset datasets/name.json, scripts/name.rb "
  def new(name)
    puts "Creating new #{name} in datasets/#{name}.json and scripts/#{name}.rb"
    HeyDan::Source.new({name:name}).create
  end  

  desc "list", "lists available datasets to import"
  def list()
    puts HeyDan.new.datasets.map {|f| f.gsub('.json', '')}
  end
end
 
HeyDanCLI.start(ARGV)