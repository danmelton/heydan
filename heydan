#!/usr/bin/env ruby
require 'rubygems'
require 'thor'
require File.join(Dir.pwd, 'lib', 'hey_dan.rb')
 
class HeyDanCLI < Thor
  desc "sync", "Downloads all data sets from the CDN & imports them into elasticsearch."
  def sync(*names)
    puts "Syncing #{names.join(', ')}"
  end

  desc "server", "starts up the webserver for heydan"
  def server()
    puts "Serving up some HeyDan Realness"
  end  

  desc "download NAMES", "Downloads all datasets from the CDN"
  def download(*names)
    puts "Downloading  #{names.join(', ')}"
  end  

  desc "setup", "Setups all the jurisdictions from the identifiers folder"
    def setup()
      puts "Setting up identifiers"
      HeyDan::Identifier.process()
    end 

  desc "parse NAMES", "Parses downloaded csv files into jurisdiction/*/*.json files"
  def parse(*names)
    if names.size > 0
      puts "Processing all #{names.join(', ')}"
      HeyDan::Parse.process(names)
    else
      puts "Processing all files"
      HeyDan::Parse.process_all
    end
  end 

  desc "process NAMES", "Grab all datasets from original source process them and output into downloads folder."
  def process(*names)
    if names.size > 0
      puts "Processing all #{names.join(', ')}"
      HeyDan::Script.process(names)
    else
      puts "Processing all files"
      HeyDan::Script.process_all
    end
    
  end  

  desc "import NAMES", "Bulk updates elasticsearch from the jurisdictions folder"
  def import(*names)
    puts "Importing  #{names.join(', ')}"
  end  

  desc "upload NAMES", "uploads download folder to s3. If you have a heydan.yml file with keys, it will upload all the files to an s3 bucket "
  def upload(*names)
    puts "Uploading  #{names.join(', ')}"
  end  

  desc "new NAME", "generates new files to add a new dataset datasets/name.json, scripts/name.rb "
  def new(name)
    puts "Creating new #{name} in datasets/#{name}.json and scripts/#{name}.rb"
    HeyDan::Dataset.new({name:name}).create
  end  

  desc "list", "lists available datasets to import"
  def list()
    puts "List of Dataset Names here"
  end
end
 
HeyDanCLI.start(ARGV)